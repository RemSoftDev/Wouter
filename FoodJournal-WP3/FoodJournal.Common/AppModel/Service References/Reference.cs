//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace FoodJournal.FoodJournalService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/FoodJournalServiceWebRole.FoodJournalServ" +
        "ice")]
    public partial class Message : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BodyField;
        
        private string KeyField;
        
        private string MessageTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTypeField, value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Identifier", Namespace="http://schemas.datacontract.org/2004/07/FoodJournalServiceWebRole.FoodJournalServ" +
        "ice")]
    public partial class Identifier : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FoodJournalService.IFoodJournalService")]
    public interface IFoodJournalService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFoodJournalService/Push", ReplyAction="http://tempuri.org/IFoodJournalService/PushResponse")]
        System.IAsyncResult BeginPush(string AppInstance, string Culture, string Version, System.Collections.Generic.List<FoodJournal.FoodJournalService.Message> messages, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<FoodJournal.FoodJournalService.Identifier> EndPush(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFoodJournalService/Pull", ReplyAction="http://tempuri.org/IFoodJournalService/PullResponse")]
        System.IAsyncResult BeginPull(string AppInstance, System.Collections.Generic.List<FoodJournal.FoodJournalService.Identifier> processed, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.List<FoodJournal.FoodJournalService.Message> EndPull(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFoodJournalServiceChannel : FoodJournal.FoodJournalService.IFoodJournalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PushCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PushCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<FoodJournal.FoodJournalService.Identifier> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<FoodJournal.FoodJournalService.Identifier>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PullCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PullCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.List<FoodJournal.FoodJournalService.Message> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.List<FoodJournal.FoodJournalService.Message>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FoodJournalServiceClient : System.ServiceModel.ClientBase<FoodJournal.FoodJournalService.IFoodJournalService>, FoodJournal.FoodJournalService.IFoodJournalService {
        
        private BeginOperationDelegate onBeginPushDelegate;
        
        private EndOperationDelegate onEndPushDelegate;
        
        private System.Threading.SendOrPostCallback onPushCompletedDelegate;
        
        private BeginOperationDelegate onBeginPullDelegate;
        
        private EndOperationDelegate onEndPullDelegate;
        
        private System.Threading.SendOrPostCallback onPullCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public FoodJournalServiceClient() {
        }
        
        public FoodJournalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FoodJournalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FoodJournalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FoodJournalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<PushCompletedEventArgs> PushCompleted;
        
        public event System.EventHandler<PullCompletedEventArgs> PullCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FoodJournal.FoodJournalService.IFoodJournalService.BeginPush(string AppInstance, string Culture, string Version, System.Collections.Generic.List<FoodJournal.FoodJournalService.Message> messages, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPush(AppInstance, Culture, Version, messages, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<FoodJournal.FoodJournalService.Identifier> FoodJournal.FoodJournalService.IFoodJournalService.EndPush(System.IAsyncResult result) {
            return base.Channel.EndPush(result);
        }
        
        private System.IAsyncResult OnBeginPush(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string AppInstance = ((string)(inValues[0]));
            string Culture = ((string)(inValues[1]));
            string Version = ((string)(inValues[2]));
            System.Collections.Generic.List<FoodJournal.FoodJournalService.Message> messages = ((System.Collections.Generic.List<FoodJournal.FoodJournalService.Message>)(inValues[3]));
            return ((FoodJournal.FoodJournalService.IFoodJournalService)(this)).BeginPush(AppInstance, Culture, Version, messages, callback, asyncState);
        }
        
        private object[] OnEndPush(System.IAsyncResult result) {
            System.Collections.Generic.List<FoodJournal.FoodJournalService.Identifier> retVal = ((FoodJournal.FoodJournalService.IFoodJournalService)(this)).EndPush(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPushCompleted(object state) {
            if ((this.PushCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PushCompleted(this, new PushCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PushAsync(string AppInstance, string Culture, string Version, System.Collections.Generic.List<FoodJournal.FoodJournalService.Message> messages) {
            this.PushAsync(AppInstance, Culture, Version, messages, null);
        }
        
        public void PushAsync(string AppInstance, string Culture, string Version, System.Collections.Generic.List<FoodJournal.FoodJournalService.Message> messages, object userState) {
            if ((this.onBeginPushDelegate == null)) {
                this.onBeginPushDelegate = new BeginOperationDelegate(this.OnBeginPush);
            }
            if ((this.onEndPushDelegate == null)) {
                this.onEndPushDelegate = new EndOperationDelegate(this.OnEndPush);
            }
            if ((this.onPushCompletedDelegate == null)) {
                this.onPushCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPushCompleted);
            }
            base.InvokeAsync(this.onBeginPushDelegate, new object[] {
                        AppInstance,
                        Culture,
                        Version,
                        messages}, this.onEndPushDelegate, this.onPushCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FoodJournal.FoodJournalService.IFoodJournalService.BeginPull(string AppInstance, System.Collections.Generic.List<FoodJournal.FoodJournalService.Identifier> processed, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPull(AppInstance, processed, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.List<FoodJournal.FoodJournalService.Message> FoodJournal.FoodJournalService.IFoodJournalService.EndPull(System.IAsyncResult result) {
            return base.Channel.EndPull(result);
        }
        
        private System.IAsyncResult OnBeginPull(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string AppInstance = ((string)(inValues[0]));
            System.Collections.Generic.List<FoodJournal.FoodJournalService.Identifier> processed = ((System.Collections.Generic.List<FoodJournal.FoodJournalService.Identifier>)(inValues[1]));
            return ((FoodJournal.FoodJournalService.IFoodJournalService)(this)).BeginPull(AppInstance, processed, callback, asyncState);
        }
        
        private object[] OnEndPull(System.IAsyncResult result) {
            System.Collections.Generic.List<FoodJournal.FoodJournalService.Message> retVal = ((FoodJournal.FoodJournalService.IFoodJournalService)(this)).EndPull(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPullCompleted(object state) {
            if ((this.PullCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PullCompleted(this, new PullCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PullAsync(string AppInstance, System.Collections.Generic.List<FoodJournal.FoodJournalService.Identifier> processed) {
            this.PullAsync(AppInstance, processed, null);
        }
        
        public void PullAsync(string AppInstance, System.Collections.Generic.List<FoodJournal.FoodJournalService.Identifier> processed, object userState) {
            if ((this.onBeginPullDelegate == null)) {
                this.onBeginPullDelegate = new BeginOperationDelegate(this.OnBeginPull);
            }
            if ((this.onEndPullDelegate == null)) {
                this.onEndPullDelegate = new EndOperationDelegate(this.OnEndPull);
            }
            if ((this.onPullCompletedDelegate == null)) {
                this.onPullCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPullCompleted);
            }
            base.InvokeAsync(this.onBeginPullDelegate, new object[] {
                        AppInstance,
                        processed}, this.onEndPullDelegate, this.onPullCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override FoodJournal.FoodJournalService.IFoodJournalService CreateChannel() {
            return new FoodJournalServiceClientChannel(this);
        }
        
        private class FoodJournalServiceClientChannel : ChannelBase<FoodJournal.FoodJournalService.IFoodJournalService>, FoodJournal.FoodJournalService.IFoodJournalService {
            
            public FoodJournalServiceClientChannel(System.ServiceModel.ClientBase<FoodJournal.FoodJournalService.IFoodJournalService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginPush(string AppInstance, string Culture, string Version, System.Collections.Generic.List<FoodJournal.FoodJournalService.Message> messages, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = AppInstance;
                _args[1] = Culture;
                _args[2] = Version;
                _args[3] = messages;
                System.IAsyncResult _result = base.BeginInvoke("Push", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<FoodJournal.FoodJournalService.Identifier> EndPush(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<FoodJournal.FoodJournalService.Identifier> _result = ((System.Collections.Generic.List<FoodJournal.FoodJournalService.Identifier>)(base.EndInvoke("Push", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPull(string AppInstance, System.Collections.Generic.List<FoodJournal.FoodJournalService.Identifier> processed, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = AppInstance;
                _args[1] = processed;
                System.IAsyncResult _result = base.BeginInvoke("Pull", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.List<FoodJournal.FoodJournalService.Message> EndPull(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.List<FoodJournal.FoodJournalService.Message> _result = ((System.Collections.Generic.List<FoodJournal.FoodJournalService.Message>)(base.EndInvoke("Pull", _args, result)));
                return _result;
            }
        }
    }
}
