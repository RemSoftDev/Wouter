using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using FoodJournal.Values;

#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FoodJournal.Legacy.Model
{
    using System.Data.Linq;
    using System.Data.Linq.Mapping;
    using System.Data;
    using System.Collections.Generic;
    using System.Reflection;
    using System.Linq;
    using System.Linq.Expressions;
    using System.ComponentModel;
    using System;


    public partial class FoodDataModelDataContext : System.Data.Linq.DataContext
    {

        private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

        #region Extensibility Method Definitions
        partial void OnCreated();
        partial void InsertItemSelection(ItemSelection instance);
        partial void UpdateItemSelection(ItemSelection instance);
        partial void DeleteItemSelection(ItemSelection instance);
        partial void InsertSelectableItem(SelectableItem instance);
        partial void UpdateSelectableItem(SelectableItem instance);
        partial void DeleteSelectableItem(SelectableItem instance);
        #endregion

        public FoodDataModelDataContext(string connection) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public FoodDataModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) :
            base(connection, mappingSource)
        {
            OnCreated();
        }

        public System.Data.Linq.Table<ItemSelection> ItemSelections
        {
            get
            {
                return this.GetTable<ItemSelection>();
            }
        }

        public System.Data.Linq.Table<SelectableItem> SelectableItems
        {
            get
            {
                return this.GetTable<SelectableItem>();
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute(Name = "")]
    [global::System.Data.Linq.Mapping.InheritanceMappingAttribute(Code = "E", Type = typeof(Entry), IsDefault = true)]
    public partial class ItemSelection : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private int _ItemId;

        private string _Code;

        private Amount _AmountSelected;

        private float _AmountScale;

        private float _PivotScale;

        private EntityRef<SelectableItem> _Item;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnItemIdChanging(int value);
        partial void OnItemIdChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnAmountSelectedChanging(Amount value);
        partial void OnAmountSelectedChanged();
        partial void OnAmountScaleChanging(float value);
        partial void OnAmountScaleChanged();
        partial void OnPivotScaleChanging(float value);
        partial void OnPivotScaleChanged();
        #endregion

        public ItemSelection()
        {
            this._Item = default(EntityRef<SelectableItem>);
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, IsPrimaryKey = true, IsDbGenerated = true, UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItemId", UpdateCheck = UpdateCheck.Never)]
        public int ItemId
        {
            get
            {
                return this._ItemId;
            }
            set
            {
                if ((this._ItemId != value))
                {
                    if (this._Item.HasLoadedOrAssignedValue)
                    {
                        throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
                    }
                    this.OnItemIdChanging(value);
                    this.SendPropertyChanging();
                    this._ItemId = value;
                    this.SendPropertyChanged("ItemId");
                    this.OnItemIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Code", DbType = "NVARCHAR(1)", CanBeNull = false, UpdateCheck = UpdateCheck.Never, IsDiscriminator = true)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if ((this._Code != value))
                {
                    this.OnCodeChanging(value);
                    this.SendPropertyChanging();
                    this._Code = value;
                    this.SendPropertyChanged("Code");
                    this.OnCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AmountSelected", DbType = "NVARCHAR(80)", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public Amount AmountSelected
        {
            get
            {
                return this._AmountSelected;
            }
            set
            {
                if ((this._AmountSelected != value))
                {
                    this.OnAmountSelectedChanging(value);
                    this.SendPropertyChanging();
                    this._AmountSelected = value;
                    this.SendPropertyChanged("AmountSelected");
                    this.OnAmountSelectedChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_AmountScale", UpdateCheck = UpdateCheck.Never)]
        public float AmountScale
        {
            get
            {
                return this._AmountScale;
            }
            set
            {
                if ((this._AmountScale != value))
                {
                    this.OnAmountScaleChanging(value);
                    this.SendPropertyChanging();
                    this._AmountScale = value;
                    this.SendPropertyChanged("AmountScale");
                    this.OnAmountScaleChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PivotScale", UpdateCheck = UpdateCheck.Never)]
        public float PivotScale
        {
            get
            {
                return this._PivotScale;
            }
            set
            {
                if ((this._PivotScale != value))
                {
                    this.OnPivotScaleChanging(value);
                    this.SendPropertyChanging();
                    this._PivotScale = value;
                    this.SendPropertyChanged("PivotScale");
                    this.OnPivotScaleChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.AssociationAttribute(Name = "SelectableItem_ItemSelection", Storage = "_Item", ThisKey = "ItemId", OtherKey = "Id", IsForeignKey = true)]
        public SelectableItem Item
        {
            get
            {
                return this._Item.Entity;
            }
            set
            {
                if ((this._Item.Entity != value))
                {
                    this.SendPropertyChanging();
                    this._Item.Entity = value;
                    this.SendPropertyChanged("Item");
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class Entry : ItemSelection
    {

        private System.DateTime _Date;

        private Period _Period;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnDateChanging(System.DateTime value);
        partial void OnDateChanged();
        partial void OnPeriodChanging(Period value);
        partial void OnPeriodChanged();
        #endregion

        public Entry()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Date", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime Date
        {
            get
            {
                return this._Date;
            }
            set
            {
                if ((this._Date != value))
                {
                    this.OnDateChanging(value);
                    this.SendPropertyChanging();
                    this._Date = value;
                    this.SendPropertyChanged("Date");
                    this.OnDateChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Period", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public Period Period
        {
            get
            {
                return this._Period;
            }
            set
            {
                if ((this._Period != value))
                {
                    this.OnPeriodChanging(value);
                    this.SendPropertyChanging();
                    this._Period = value;
                    this.SendPropertyChanged("Period");
                    this.OnPeriodChanged();
                }
            }
        }
    }

    [global::System.Data.Linq.Mapping.TableAttribute()]
    [global::System.Data.Linq.Mapping.InheritanceMappingAttribute(Code = "F", Type = typeof(FoodItem), IsDefault = true)]
    public partial class SelectableItem : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

        private int _Id;

        private string _Code;

        private string _Text;

        private string _Description;

        private string _Culture;

        private string _Source;

        private string _SourceID;

        private string _PropertyValues;

        private string _ServingSizesData;

        private Amount _PivotAmount;

        private Amount _LastAmount;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnIdChanging(int value);
        partial void OnIdChanged();
        partial void OnCodeChanging(string value);
        partial void OnCodeChanged();
        partial void OnTextChanging(string value);
        partial void OnTextChanged();
        partial void OnDescriptionChanging(string value);
        partial void OnDescriptionChanged();
        partial void OnCultureChanging(string value);
        partial void OnCultureChanged();
        partial void OnSourceChanging(string value);
        partial void OnSourceChanged();
        partial void OnSourceIDChanging(string value);
        partial void OnSourceIDChanged();
        partial void OnPropertyValuesChanging(string value);
        partial void OnPropertyValuesChanged();
        partial void OnServingSizesDataChanging(string value);
        partial void OnServingSizesDataChanged();
        partial void OnPivotAmountChanging(Amount value);
        partial void OnPivotAmountChanged();
        partial void OnLastAmountChanging(Amount value);
        partial void OnLastAmountChanged();
        #endregion

        public SelectableItem()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Id", AutoSync = AutoSync.OnInsert, IsPrimaryKey = true, IsDbGenerated = true, UpdateCheck = UpdateCheck.Never)]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if ((this._Id != value))
                {
                    this.OnIdChanging(value);
                    this.SendPropertyChanging();
                    this._Id = value;
                    this.SendPropertyChanged("Id");
                    this.OnIdChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Code", DbType = "NVARCHAR(1)", CanBeNull = false, UpdateCheck = UpdateCheck.Never, IsDiscriminator = true)]
        public string Code
        {
            get
            {
                return this._Code;
            }
            set
            {
                if ((this._Code != value))
                {
                    this.OnCodeChanging(value);
                    this.SendPropertyChanging();
                    this._Code = value;
                    this.SendPropertyChanged("Code");
                    this.OnCodeChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Text", DbType = "NVARCHAR(160)", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string Text
        {
            get
            {
                return this._Text;
            }
            set
            {
                if ((this._Text != value))
                {
                    this.OnTextChanging(value);
                    this.SendPropertyChanging();
                    this._Text = value;
                    this.SendPropertyChanged("Text");
                    this.OnTextChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "NVARCHAR(160)", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if ((this._Description != value))
                {
                    this.OnDescriptionChanging(value);
                    this.SendPropertyChanging();
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                    this.OnDescriptionChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Culture", DbType = "NVARCHAR(20)", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string Culture
        {
            get
            {
                return this._Culture;
            }
            set
            {
                if ((this._Culture != value))
                {
                    this.OnCultureChanging(value);
                    this.SendPropertyChanging();
                    this._Culture = value;
                    this.SendPropertyChanged("Culture");
                    this.OnCultureChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Source", DbType = "NVARCHAR(120)", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string Source
        {
            get
            {
                return this._Source;
            }
            set
            {
                if ((this._Source != value))
                {
                    this.OnSourceChanging(value);
                    this.SendPropertyChanging();
                    this._Source = value;
                    this.SendPropertyChanged("Source");
                    this.OnSourceChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_SourceID", DbType = "NVARCHAR(20)", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string SourceID
        {
            get
            {
                return this._SourceID;
            }
            set
            {
                if ((this._SourceID != value))
                {
                    this.OnSourceIDChanging(value);
                    this.SendPropertyChanging();
                    this._SourceID = value;
                    this.SendPropertyChanged("SourceID");
                    this.OnSourceIDChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PropertyValues", DbType = "NVARCHAR(4000)", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string PropertyValues
        {
            get
            {
                return this._PropertyValues;
            }
            set
            {
                if ((this._PropertyValues != value))
                {
                    this.OnPropertyValuesChanging(value);
                    this.SendPropertyChanging();
                    this._PropertyValues = value;
                    this.SendPropertyChanged("PropertyValues");
                    this.OnPropertyValuesChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ServingSizesData", DbType = "NVARCHAR(4000)", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string ServingSizesData
        {
            get
            {
                return this._ServingSizesData;
            }
            set
            {
                if ((this._ServingSizesData != value))
                {
                    this.OnServingSizesDataChanging(value);
                    this.SendPropertyChanging();
                    this._ServingSizesData = value;
                    this.SendPropertyChanged("ServingSizesData");
                    this.OnServingSizesDataChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PivotAmount", DbType = "NVARCHAR(80)", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public Amount PivotAmount
        {
            get
            {
                return this._PivotAmount;
            }
            set
            {
                if ((this._PivotAmount != value))
                {
                    this.OnPivotAmountChanging(value);
                    this.SendPropertyChanging();
                    this._PivotAmount = value;
                    this.SendPropertyChanged("PivotAmount");
                    this.OnPivotAmountChanged();
                }
            }
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastAmount", DbType = "NVARCHAR(80)", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public Amount LastAmount
        {
            get
            {
                return this._LastAmount;
            }
            set
            {
                if ((this._LastAmount != value))
                {
                    this.OnLastAmountChanging(value);
                    this.SendPropertyChanging();
                    this._LastAmount = value;
                    this.SendPropertyChanged("LastAmount");
                    this.OnLastAmountChanged();
                }
            }
        }

        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            if ((this.PropertyChanging != null))
            {
                this.PropertyChanging(this, emptyChangingEventArgs);
            }
        }

        protected virtual void SendPropertyChanged(String propertyName)
        {
            if ((this.PropertyChanged != null))
            {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    public partial class FoodItem : SelectableItem
    {

        private string _LastAmount;

        #region Extensibility Method Definitions
        partial void OnLoaded();
        partial void OnValidate(System.Data.Linq.ChangeAction action);
        partial void OnCreated();
        partial void OnCommonMealChanging(string value);
        partial void OnCommonMealChanged();
        #endregion

        public FoodItem()
        {
            OnCreated();
        }

        [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LastAmount", DbType = "NVARCHAR(8)", CanBeNull = false, UpdateCheck = UpdateCheck.Never)]
        public string CommonMeal
        {
            get
            {
                return this._LastAmount;
            }
            set
            {
                if ((this._LastAmount != value))
                {
                    this.OnCommonMealChanging(value);
                    this.SendPropertyChanging();
                    this._LastAmount = value;
                    this.SendPropertyChanged("CommonMeal");
                    this.OnCommonMealChanged();
                }
            }
        }
    }
}
#pragma warning restore 1591
